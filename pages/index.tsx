import Head from 'next/head'
import Link from 'next/link'
import {sanityClient,urlFor} from '../sanity'
import {Post} from '../typings'
import logo from '../assets/logo.png'
import Image from 'next/image'
import Marquee from "react-fast-marquee";
import axios from 'axios'
import { useEffect, useState } from 'react'
interface Props{
  posts:[Post],
  coins:any
}


export default function Home({posts,coins}:Props) {
  const [width,setWidth] = useState(0)
  useEffect(() => {
    if (typeof window !== "undefined") {
      // Client-side-only code
      setWidth(window.innerWidth)
    }
  },[])
  return (
    <div className="mx-auto max-w-7xl">
      <Head>
        <title>JustRiskIt</title>
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex items-center justify-between border-y border-black bg-yellow-400 py-2 lg:py-0">
        <div className="space-y-5 px-10">
          <h1 className="max-w-xl font-serif text-3xl md:text-6xl">
            <span className="underline decoration-black decoration-4">
              Just Risk It,
            </span>
            is a Place to write, read, and connect
          </h1>
          <h2>
            It's easy to share your thinking on any topic and connect
            with millions of readers.
          </h2>
        </div>
        <Image
          className="hidden h-32 md:inline-flex lg:h-full"
          src={logo}
          width="350px"
          height="350px"
          alt=""
        />
      </div>

      {/* Marqueee */}
      <Marquee  gradient={width > 650  ? true : false} pauseOnHover={true} className="mt-12 border-y py-8 px-2 overflow-hidden" speed={40} >
        {coins?.map((c : any) => ( 
          <div key={c.id} className="flex border-r px-2 hover:text-blue-500 transform hover:scale-110 duration-500  cursor-pointer items-center space-x-8"> 
          <div className="flex space-x-2">
            <img src={c.image} alt="" className="w-9 h-9 " />
          <div className="space-y-4">
            <p className="text-xs font-semibold ">{c.symbol.toUpperCase()}</p>
            <p className="text-xs">${c.current_price.toFixed(2)}</p>
            </div>
          </div> 
            <div className="space-y-4">
              {c.market_cap_change_percentage_24h > 0 ? (
              <>
               {/* Green Chart */}
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="80" height="20">
            <polyline points=" 0,6.288659793814428 0.5298013245033113,5.738831615120283 1.0596026490066226,5.040091638029791 1.589403973509934,3.91752577319588 2.119205298013245,4.558991981672399 2.6490066225165565,5.383734249713637 3.178807947019868,6.002290950744555 3.708609271523179,5.750286368843067 4.23841059602649,5.589919816723937 4.768211920529802,4.673539518900343 5.298013245033113,5.18900343642612 5.827814569536424,5.292096219931279 6.357615894039736,6.242840778923258 6.887417218543047,7.468499427262312 7.417218543046358,8.648339060710196 7.9470198675496695,10.240549828178695 8.47682119205298,10.000000000000007 9.006622516556291,10.389461626575025 9.536423841059603,7.766323024054987 10.066225165562916,5.9335624284078 10.596026490066226,6.792668957617421 11.125827814569536,6.162657502863686 11.655629139072849,6.575028636884303 12.18543046357616,6.872852233676978 12.715231788079471,5.2233676975945045 13.245033112582782,4.9369988545246315 13.774834437086094,3.734249713631165 14.304635761589406,3.3562428407789326 14.834437086092716,3.65406643757159 15.364238410596027,5.234822451317292 15.894039735099339,2.2794959908361925 16.42384105960265,4.994272623138604 16.95364238410596,1.0423825887743376 17.483443708609272,0.6185567010309327 18.013245033112582,0.7789232531500652 18.543046357615896,0.9851088201603666 19.072847682119207,0.8361970217640362 19.602649006622517,1.0080183276059493 20.13245033112583,0 20.66225165562914,0.641466208476519 21.192052980132452,1.1340206185566934 21.721854304635762,2.6345933562428385 22.251655629139073,7.101947308132882 22.781456953642387,8.20160366552119 23.311258278145697,4.375715922107668 23.841059602649008,4.799541809851087 24.37086092715232,6.334478808705617 24.900662251655632,7.812142038946156 25.430463576158942,9.255441008018328 25.960264900662253,8.980526918671256 26.490066225165563,8.556701030927837 27.019867549668877,11.386025200458192 27.549668874172188,12.646048109965648 28.079470198675498,11.97021764032074 28.609271523178812,12.554410080183274 29.139072847682122,13.436426116838497 29.668874172185433,15.647193585337916 30.198675496688743,15.166093928980526 30.728476821192054,14.192439862542962 31.258278145695368,14.009163802978245 31.788079470198678,13.711340206185572 32.31788079470199,13.33333333333334 32.8476821192053,11.237113402061862 33.37748344370861,11.466208476517766 33.90728476821192,11.397479954180993 34.437086092715234,10.710194730813285 34.966887417218544,9.57617411225659 35.496688741721854,11.477663230240548 36.026490066225165,12.142038946162655 36.55629139072848,11.878579610538383 37.08609271523179,11.191294387170675 37.6158940397351,11.099656357388318 38.145695364238414,11.214203894616277 38.675496688741724,11.477663230240548 39.205298013245034,9.289805269186715 39.735099337748345,9.140893470790385 40.26490066225166,7.8465063001145445 40.79470198675497,9.347079037800688 41.32450331125828,8.865979381443296 41.85430463576159,7.5486827033218855 42.384105960264904,6.437571592210777 42.913907284768214,6.804123711340207 43.443708609271525,5.876288659793811 43.973509933774835,5.8304696449026405 44.503311258278146,4.272623138602526 45.03311258278146,3.367697594501717 45.56291390728477,3.150057273768617 46.092715231788084,3.0813287514318404 46.622516556291394,6.059564719358544 47.152317880794705,4.8797250859106605 47.682119205298015,6.758304696449036 48.211920529801326,7.159221076746853 48.74172185430464,9.404352806414657 49.27152317880795,8.442153493699893 49.801324503311264,10.343642611683855 50.331125827814574,11.237113402061862 50.860927152317885,12.199312714776642 51.390728476821195,11.64948453608248 51.920529801324506,14.135166093928989 52.450331125827816,20 52.980132450331126,17.273768613974802 53.509933774834444,15.40664375715923 54.039735099337754,17.869415807560138 54.569536423841065,13.81443298969073 55.099337748344375,15.211912943871713 55.629139072847686,15.601374570446746 56.158940397350996,15.876288659793818 56.688741721854306,17.113402061855673 57.218543046357624,15.509736540664388 57.748344370860934,12.43986254295533 58.278145695364245,10.52691867124857 58.807947019867555,12.668957617411234 59.337748344370866,11.088201603665533 59.867549668874176,6.563573883161521 60.397350993377486,6.093928980526913 60.9271523178808,6.059564719358544 61.45695364238411,8.934707903780069 61.986754966887425,5.452462772050408 62.516556291390735,7.170675830469653 63.046357615894046,4.982817869415804 63.576158940397356,7.147766323024051 64.10596026490067,7.388316151202755 64.63576158940398,7.7777777777777874 65.1655629139073,7.308132875143183 65.6953642384106,7.342497136311568 66.22516556291392,8.47651775486828 66.75496688741723,7.2508591065292105 67.28476821192054,7.663230240549828 67.81456953642385,5.9335624284078 68.34437086092716,3.825887743413521 68.87417218543047,6.4146620847651725 69.40397350993378,4.776632302405501 69.93377483443709,5.20045819014892 70.4635761589404,5.383734249713637 70.99337748344371,6.059564719358544 71.52317880794702,6.208476517754873 72.05298013245033,3.906071019473078 72.58278145695365,2.9209621993127115 73.11258278145696,1.4776632302405588 73.64238410596028,0.3894616265750308 74.17218543046359,1.546391752577314 74.7019867549669,2.428407789232537 75.2317880794702,2.416953035509735 75.76158940397352,2.359679266895764 76.29139072847683,3.6998854524627802 76.82119205298014,4.318442153493699 77.35099337748345,3.894616265750294 77.88079470198676,4.4100801832760546 78.41059602649007,4.455899198167241 78.94039735099338,5.017182130584189 79.47019867549669,5.005727376861405" 
          stroke="#00A68C" strokeLinecap="round" strokeWidth="1.4" fill="none"></polyline>
</svg>
 {/* Up Arrow / Down Arrow */}
 <div className="flex items-center justify-end">
   <p className="text-green-600  text-xs">{c.market_cap_change_percentage_24h}</p>
<svg className="w-4 fill-green-600 " version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 330.002 330.002"  xmlSpace="preserve">
<path id="XMLID_21_" d="M324.371,213.287l-150.004-120c-5.479-4.382-13.262-4.381-18.741,0.001l-149.996,120
	c-4.974,3.979-6.893,10.667-4.784,16.678c2.108,6.011,7.784,10.035,14.154,10.035h300c6.371,0,12.046-4.024,14.154-10.035
	C331.264,223.954,329.346,217.267,324.371,213.287z"/>
</svg>
</div>
</>
):(
  <>

              {/* Red Chart */}
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="80" height="20">
  <polyline points=" 0,1.4814814814814738 0.5298013245033113,1.3991769547325035 1.0596026490066226,0.7407407407407334 1.589403973509934,0 2.119205298013245,0.4115226337448483 2.6490066225165565,0.8230452674897037 3.178807947019868,1.3991769547325035 3.708609271523179,0.987654320987648 4.23841059602649,1.0699588477366184 4.768211920529802,0.4115226337448483 5.298013245033113,0.658436213991763 5.827814569536424,0.658436213991763 6.357615894039736,1.0699588477366184 6.887417218543047,2.3045267489711883 7.417218543046358,3.374485596707814 7.9470198675496695,5.349794238683117 8.47682119205298,4.938271604938269 9.006622516556291,5.349794238683117 9.536423841059603,5.514403292181058 10.066225165562916,4.609053497942384 10.596026490066226,5.267489711934147 11.125827814569536,5.185185185185183 11.655629139072849,5.267489711934147 12.18543046357616,5.761316872427972 12.715231788079471,4.526748971193413 13.245033112582782,4.855967078189298 13.774834437086094,5.020576131687239 14.304635761589406,4.609053497942384 14.834437086092716,5.267489711934147 15.364238410596027,6.0905349794238575 15.894039735099339,4.197530864197528 16.42384105960265,5.843621399176943 16.95364238410596,3.2921810699588434 17.483443708609272,2.880658436213988 18.013245033112582,2.798353909465014 18.543046357615896,3.2098765432098695 19.072847682119207,2.139917695473244 19.602649006622517,2.3868312757201586 20.13245033112583,2.222222222222218 20.66225165562914,2.6337448559670733 21.192052980132452,3.127572016460899 21.721854304635762,4.526748971193413 22.251655629139073,6.419753086419744 22.781456953642387,7.572016460905342 23.311258278145697,4.032921810699586 23.841059602649008,3.7860082304526728 24.37086092715232,4.526748971193413 24.900662251655632,5.596707818930032 25.430463576158942,6.666666666666659 25.960264900662253,6.584362139917685 26.490066225165563,6.419753086419744 27.019867549668877,9.794238683127567 27.549668874172188,11.358024691358022 28.079470198675498,11.028806584362137 28.609271523178812,11.19341563786008 29.139072847682122,12.921810699588477 29.668874172185433,14.156378600823047 30.198675496688743,14.732510288065846 30.728476821192054,13.909465020576132 31.258278145695368,13.580246913580247 31.788079470198678,13.251028806584362 32.31788079470199,13.08641975308642 32.8476821192053,11.358024691358022 33.37748344370861,11.358024691358022 33.90728476821192,11.028806584362137 34.437086092715234,9.794238683127567 34.966887417218544,9.465020576131682 35.496688741721854,10.946502057613166 36.026490066225165,11.111111111111109 36.55629139072848,11.028806584362137 37.08609271523179,9.876543209876537 37.6158940397351,10.205761316872424 38.145695364238414,10.288065843621395 38.675496688741724,10.61728395061728 39.205298013245034,8.477366255144025 39.735099337748345,9.711934156378597 40.26490066225166,8.559670781892999 40.79470198675497,8.806584362139912 41.32450331125828,8.06584362139917 41.85430463576159,7.572016460905342 42.384105960264904,7.407407407407401 42.913907284768214,7.242798353909457 43.443708609271525,6.666666666666659 43.973509933774835,6.17283950617283 44.503311258278146,6.0905349794238575 45.03311258278146,5.267489711934147 45.56291390728477,5.020576131687239 46.092715231788084,5.596707818930032 46.622516556291394,6.502057613168715 47.152317880794705,5.596707818930032 47.682119205298015,5.843621399176943 48.211920529801326,6.666666666666659 48.74172185430464,8.64197530864197 49.27152317880795,7.901234567901227 49.801324503311264,9.547325102880652 50.331125827814574,10.699588477366252 50.860927152317885,11.934156378600822 51.390728476821195,11.934156378600822 51.920529801324506,13.827160493827162 52.450331125827816,16.37860082304526 52.980132450331126,16.87242798353909 53.509933774834444,18.2716049382716 54.039735099337754,20 54.569536423841065,18.10699588477366 55.099337748344375,19.012345679012345 55.629139072847686,19.588477366255145 56.158940397350996,19.588477366255145 56.688741721854306,19.588477366255145 57.218543046357624,18.436213991769545 57.748344370860934,16.543209876543205 58.278145695364245,14.650205761316874 58.807947019867555,16.79012345679012 59.337748344370866,15.226337448559674 59.867549668874176,13.08641975308642 60.397350993377486,11.934156378600822 60.9271523178808,11.19341563786008 61.45695364238411,13.827160493827162 61.986754966887425,11.769547325102877 62.516556291390735,12.016460905349792 63.046357615894046,11.275720164609051 63.576158940397356,12.51028806584362 64.10596026490067,12.757201646090534 64.63576158940398,12.839506172839506 65.1655629139073,12.263374485596707 65.6953642384106,12.757201646090534 66.22516556291392,13.662551440329217 66.75496688741723,12.921810699588477 67.28476821192054,13.08641975308642 67.81456953642385,11.358024691358022 68.34437086092716,9.218106995884767 68.87417218543047,10.699588477366252 69.40397350993378,9.547325102880652 69.93377483443709,9.794238683127567 70.4635761589404,10.288065843621395 70.99337748344371,10.61728395061728 71.52317880794702,10.61728395061728 72.05298013245033,9.794238683127567 72.58278145695365,9.547325102880652 73.11258278145696,8.312757201646084 73.64238410596028,6.419753086419744 74.17218543046359,6.502057613168715 74.7019867549669,6.502057613168715 75.2317880794702,6.584362139917685 75.76158940397352,6.913580246913572 76.29139072847683,7.654320987654312 76.82119205298014,8.230452674897112 77.35099337748345,8.148148148148142 77.88079470198676,8.806584362139912 78.41059602649007,8.477366255144025 78.94039735099338,8.888888888888882 79.47019867549669,9.053497942386826" 
  stroke="#D9475A" strokeLinecap="round" strokeWidth="1.4" fill="none"></polyline>
</svg>
<div className="flex items-center text-right justify-end">
   <p className="text-red-600 text-xs">{c.market_cap_change_percentage_24h}</p>
{/* Up Arrow / Down Arrow */}
<svg className="w-4 fill-red-600 rotate-180" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 330.002 330.002"  xmlSpace="preserve">
<path id="XMLID_21_" d="M324.371,213.287l-150.004-120c-5.479-4.382-13.262-4.381-18.741,0.001l-149.996,120
	c-4.974,3.979-6.893,10.667-4.784,16.678c2.108,6.011,7.784,10.035,14.154,10.035h300c6.371,0,12.046-4.024,14.154-10.035
	C331.264,223.954,329.346,217.267,324.371,213.287z"/>
</svg>
</div>
</>
)}
            </div>


          
          </div>
        ))}
      </Marquee>
      
      {/* Posts */}
      <div className='grid grid-cols-1 my-10 sm:grid-cols-2 lg:grid-cols-3 gap-3 md:grap-6 p-2 md:p-6'>
        {posts.map(post => (
          <Link key={post._id} href={`/post/${post.slug.current}`}>
            <div className='border rounded-lg group cursor-pointer overflow-hidden'>
              <img className='h-60 w-full object-cover group-hover:scale-105 transition-transform duration-200 ease-in-out' src={urlFor(post.mainImage).url()!} alt="" />
              <div className='w-full py-3 px-2 bg-white'>
                  <p className='text-md md:text-lg font-bold'>{post.title}</p>
                <div className='flex w-full items-center justify-between'>
                  <div className='flexx w-3/4 text-xs'><p className=' line-clamp-3'>{post.description} </p><span className='text-green-500'>by {post.author.name}</span></div>
                  <img className='h-12 w-12  rounded-full' src={urlFor(post.author.image).url()!} alt="" />
                </div>
              </div>
            </div>
          </Link>
        ))}
      </div>
    </div>
  )
}


export const getServerSideProps = async() => {
  const query = `*[_type   == "post"]{
    _id,
    title,
    author -> {
      name,
      image
    },
    description,
    mainImage,
    slug
  }`;
  const getCoins = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum%2Cbinancecoin%2Ccardano%2Cdogecoin%2Csolana%2Cripple%2Ccrypto-com-chain%2Cbinance-peg-avalanche%2C&order=market_cap_desc&per_page=100&page=1&sparkline=false')
  const coins = getCoins.data
  const posts = await sanityClient.fetch(query)

  return {
    props:{
      posts,
      coins
    }
  }
} 


